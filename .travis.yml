dist: trusty
sudo: required
install: true
stages:
  - build docker images
env:
  global:
    - GOARCH=amd64
before_install:
  - sleep 15
  - sudo apt-get install -y
  - sudo apt-get install -y curl
  - sudo apt-get install -y shellcheck
jobs:
  include:
    - stage: build docker images
      name: build docker image vdbench
      script:
      - shellcheck $(ls -R vdbench/* | grep .sh)
      - make vdbench
    - stage: build docker images
      name: build docker image forkbomb
      script:
      - shellcheck $(ls -R forkbomb/* | grep .sh)
      - make forkbomb
    - stage: build docker images
      name: build docker image liveness
      script:
      - shellcheck $(ls -R busybox/* | grep .sh)
      - make liveness
    - stage: build docker images
      name: build docker image fio
      script:
      - shellcheck $(ls -R fio/* | grep .sh)
      - make fio
    - stage: build docker images
      name: build docker image iometer
      script:
      - shellcheck $(ls -R iometer/* | grep .sh)
      - make iometer
    - stage: build docker images
      name: build docker image chaostoolkit
      script:
      - shellcheck $(ls -R chaostoolkit-aws/* | grep .sh)
      - make chaostoolkit-aws
#    - stage: build docker images
#      name: build docker image mysql-client
#      script:
#      - make mysql-client
    - stage: build docker images
      name: build docker image sysbench-client
      script:
      - shellcheck $(ls -R sysbench/* | grep .sh)
      - make sysbench-client
    - stage: build docker images
      name: build docker image tpcc-client
      script:
      - shellcheck $(ls -R tpcc-client/* | grep .sh)
      - make tpcc-client
    - stage: build docker images
      name: build docker image mongo-client
      script:
      - shellcheck $(ls -R mongo-client/* | grep .sh)
      - make mongo-client
    - stage: build docker images
      name: build docker image postgres-client
      script:
      - shellcheck $(ls -R postgres-client/* | grep .sh)
      - make postgres-client
    - stage: build docker images
      name: build docker image custom-client
      script:
      - shellcheck $(ls -R custom-client/* | grep .sh)
      - make custom-client
    - stage: build docker images
      name: build docker image jenkins-client
      script:
      - shellcheck $(ls -R jenkins-client/* | grep .sh)
      - make jenkins-client
    - stage: build docker images
      name: build docker image libiscsi
      script:
      - shellcheck $(ls -R libiscsi/* | grep .sh)
      - make libiscsi
    - stage: build docker images
      name: build docker image logger
      script:
      - shellcheck $(ls -R logger/* | grep .sh)
      - make logger
    - stage: build docker images
      name: build docker image dd-client
      script:
      - shellcheck $(ls -R dd-client/* | grep .sh)
      - make dd-client
    - stage: build docker images
      name: build docker image gitlab-runner
      script:
      - shellcheck $(ls -R gitlab-runner/* | grep .sh)
      - make gitlab-runner
    - stage: build docker images
      name: build docker image memleak
      script:
      - shellcheck $(ls -R memleak/* | grep .sh)
      - make memleak
    - stage: build docker images
      name: build docker image elasticsearch-stress
      script:
      - shellcheck $(ls -R elasticsearch-stress/* | grep .sh)
      - make elasticsearch-stress
    - stage: build docker images
      name: build docker image busybox-client
      script:
      - shellcheck $(ls -R busybox/* | grep .sh)
      - make busybox
    - stage: build docker images
      name: build docker image linux-utils
      script:
      - shellcheck $(ls -R linux-utils/* | grep .sh)
      - make linux-utils
notifications:
  email:
    recipients:
      - karthik.s@openebs.io
